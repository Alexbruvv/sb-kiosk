#!/usr/bin/env python3
"""
Generates a ssh config file for all the raspberry pis listed
in master_config.csv
"""
# pi-ssh-config, pi-names

import csv
import json
from pathlib import Path

REPO_ROOT = Path(__file__).parent.parent
MASTER_CONFIG_FILE = REPO_ROOT / "master_config.csv"
GLOBAL_CONFIG_FILE = REPO_ROOT / "global_config.json"

GENERATED_CONFIG_FILE = REPO_ROOT / "generated/pi-ssh-config"
GENERATED_NAMES_FILE = REPO_ROOT / "generated/pi-names"

REMOTE_SSH_USER = "pi"
DOMAIN = "sr.lan"


def main():
    with open(GLOBAL_CONFIG_FILE, 'r') as f:
        global_config = json.load(f)

    with (
        open(MASTER_CONFIG_FILE, 'r') as f,
        open(GENERATED_CONFIG_FILE, 'w') as ssh_config,
        open(GENERATED_NAMES_FILE, 'w') as names,
    ):
        ssh_config.writelines([
            "# This file is generated by generate-ssh-config.py\n",
            "# Do not edit this file directly\n\n",
            "Host * !*.remote\n",
            "    User pi\n",
            "    UserKnownHostsFile /dev/null\n",
            "    StrictHostKeyChecking no\n\n",
            "Host *.remote\n",
            "    User pi\n",
            "    HostName localhost\n",
            "    ProxyJump autossh_host\n\n",
            "Host autossh_host\n",
            f"    HostName {global_config['autossh_host']}\n",
            f"    User {REMOTE_SSH_USER}\n\n",
        ])

        csv_reader = csv.DictReader(f)
        for row in csv_reader:
            if row['device'] == 'default':
                continue

            device_name = row['hostname'].lower() + '.' + DOMAIN
            ssh_config.writelines([
                f"Host {device_name}\n",
                f"    HostName {device_name}\n\n",
            ])
            names.write(f"{device_name}\n")
            if row['autossh_port'] not in ['', '0']:
                ssh_config.write(
                    f"Host {device_name}.remote\n"
                    f"    HostName {device_name}\n"
                    f"    ProxyJump autossh_host\n\n"
                )


if __name__ == "__main__":
    main()
